{
  "name": "Meeting → Action Orchestrator",
  "description": "Transform meeting recordings into actionable tasks with proper multi-agent tagging and tool integrations",
  "category": "productivity",
  "isPublic": true,
  "templateData": {
    "version": 1,
    "inputSchema": {
      "type": "object",
      "properties": {
        "transcript": {
          "type": "string",
          "description": "Raw meeting transcript or audio URL"
        },
        "attendees": {
          "type": "array",
          "items": { "type": "string" },
          "description": "List of meeting attendees"
        },
        "source_type": {
          "type": "string",
          "enum": ["uploaded_text", "zoom", "gmeet", "audio_file"],
          "description": "Source of the transcript"
        },
        "export_target": {
          "type": "string",
          "enum": ["notion", "jira", "slack", "none"],
          "default": "notion",
          "description": "Where to export the action items"
        },
        "audio_url": {
          "type": "string",
          "description": "URL to audio file if source_type is audio_file"
        }
      },
      "required": ["transcript", "source_type"]
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "summary": { "type": "string" },
        "key_decisions": { "type": "array", "items": { "type": "string" } },
        "action_items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "owner": { "type": "string" },
              "task": { "type": "string" },
              "due_by": { "type": "string" },
              "priority": { "type": "string", "enum": ["Low", "Medium", "High"] },
              "notes": { "type": "string" }
            }
          }
        },
        "next_checkin": { "type": "string" },
        "export_confirmation": { "type": "object" }
      }
    },
    "agents": [
      {
        "name": "transcriber",
        "description": "Convert provided audio or text into clean transcript",
        "systemPrompt": "[#session:{{SESSION_ID}}] [#agent:transcriber]\nRole: Convert provided audio or text into a clean transcript suitable for downstream NLP.\nIf raw_transcript is already provided, normalise it.\nIf an audio file/link is provided and transcript is missing, request a Tool Call to gmeet.fetch_transcript or zoom.fetch_transcript (pick one) with minimal args.\nDo not summarise. Produce transcript only.\n\nOutput Discipline:\n- Default to markdown with short sections\n- If a tool call is needed, emit a single fenced block with minimal JSON under heading: Tool Call\n- Do not include extra JSON outside the tool call block\n- Use proper tagging: [#session:{{SESSION_ID}}] [#agent:transcriber] [#step:1]",
        "userTemplate": "Input context:\n- Source: {{source_type}} (one of: \"uploaded_text\", \"zoom\", \"gmeet\", \"audio_file\")\n- Raw transcript (optional): {{transcript}}\n- Audio link (optional): {{audio_url}}\n\nProduce:\n1) [#step:1] Transcript (plain text), cleaned of timestamps/ums unless medically or legally relevant.\n2) If a tool is required to fetch transcript, emit a single Tool Call JSON block right before the transcript.\n\nExpected Output Format:\n[#session:{{SESSION_ID}}] [#agent:transcriber] [#step:1]\n\n### Tool Call (only if needed)\n```json\n{ \"tool\": \"zoom.fetch_transcript\", \"args\": { \"url\": \"{{audio_url}}\" }}\n```\n\n### Transcript\n\n{{CLEAN_TRANSCRIPT}}",
        "inputSchema": {
          "type": "object",
          "properties": {
            "source_type": { "type": "string" },
            "transcript": { "type": "string" },
            "audio_url": { "type": "string" }
          }
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "clean_transcript": { "type": "string" },
            "tool_call": { "type": "object" }
          }
        }
      },
      {
        "name": "summariser",
        "description": "Produce crisp meeting summary and key decisions",
        "systemPrompt": "[#session:{{SESSION_ID}}] [#agent:summariser]\nRole: Produce a crisp meeting summary and key decisions. No tasks; no owners.\nKeep to 120–180 words, plus 3–5 bullets for decisions.\nTone: neutral, factual.\n\nOutput Discipline:\n- Use proper tagging: [#session:{{SESSION_ID}}] [#agent:summariser] [#step:2]\n- Default to markdown with clear sections\n- Keep summary concise and factual",
        "userTemplate": "Inputs:\n- Transcript: {{clean_transcript}}\n\nProduce:\n1. [#step:2] A short paragraph summary.\n2. \"Key Decisions\" as 3–5 bullets.\n3. \"Open Questions\" as 1–3 bullets (only if evident).\n\nExpected Output Format:\n[#session:{{SESSION_ID}}] [#agent:summariser] [#step:2]\n\n### Summary\n\n{{PARAGRAPH}}\n\n### Key Decisions\n\n* ...\n* ...\n\n### Open Questions\n\n* ... (if any)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "clean_transcript": { "type": "string" }
          }
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "summary": { "type": "string" },
            "key_decisions": { "type": "array", "items": { "type": "string" } },
            "open_questions": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      {
        "name": "action_extractor",
        "description": "Extract actionable tasks with Owner/Task/Due-By/Priority",
        "systemPrompt": "[#session:{{SESSION_ID}}] [#agent:action_extractor]\nRole: Extract actionable tasks with Owner / Task / Due‑By / Priority. Infer owners from attendee list and @mentions in transcript; if unknown, use \"Unassigned\".\nIf due dates are missing, infer a sensible date (e.g., next Friday) and add (inferred) tag.\nIf user requested export to a specific tool (Notion, Jira, Slack), emit a single Tool Call with minimal args; otherwise present a table only.\n\nOutput Discipline:\n- Use proper tagging: [#session:{{SESSION_ID}}] [#agent:action_extractor] [#step:3]\n- Present tasks in markdown table format\n- If export target is set, include a single Tool Call for the correct tool",
        "userTemplate": "Inputs:\n- Transcript: {{clean_transcript}}\n- Summary: {{summary}}\n- Attendees (optional): {{attendees}}\n- Preferred Export (optional): {{export_target}} (one of: \"notion\", \"jira\", \"slack\", \"none\")\n\nProduce:\n1. [#step:3] Table of tasks with columns: Owner | Task | Due By | Priority | Notes\n2. If export target is set, include a single Tool Call for the correct tool with minimal schema.\n\nExpected Output Format:\n[#session:{{SESSION_ID}}] [#agent:action_extractor] [#step:3]\n\n### Action Items\n\n| Owner | Task | Due By | Priority | Notes |\n| ----- | ---- | ------ | -------- | ----- |\n| Alice | Draft product brief | 2025-09-19 | High | (inferred) |\n| Bob | Set up user interviews (5) | 2025-09-18 | Medium | target ICP founders |\n\n### Tool Call (only if export requested)\n\n```json\n{\n  \"tool\": \"notion.create_tasks\",\n  \"args\": {\n    \"database_id\": \"{{NOTION_DB_ID}}\",\n    \"tasks\": [\n      {\"title\": \"Draft product brief\", \"owner\": \"Alice\", \"due\": \"2025-09-19\", \"priority\": \"High\"},\n      {\"title\": \"Set up user interviews (5)\", \"owner\": \"Bob\", \"due\": \"2025-09-18\", \"priority\": \"Medium\"}\n    ]\n  }\n}\n```",
        "inputSchema": {
          "type": "object",
          "properties": {
            "clean_transcript": { "type": "string" },
            "summary": { "type": "string" },
            "attendees": { "type": "array", "items": { "type": "string" } },
            "export_target": { "type": "string" }
          }
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "action_table": { "type": "string" },
            "action_items": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "owner": { "type": "string" },
                  "task": { "type": "string" },
                  "due_by": { "type": "string" },
                  "priority": { "type": "string" },
                  "notes": { "type": "string" }
                }
              }
            },
            "tool_call": { "type": "object" }
          }
        }
      },
      {
        "name": "publisher",
        "description": "Present human-readable final report and confirm tool actions",
        "systemPrompt": "[#session:{{SESSION_ID}}] [#agent:publisher]\nRole: Present a human‑readable final report and confirm any tool actions.\nDo not re‑summarise excessively. Provide concise, copy‑ready output.\nIf the prior step requested a tool call, wait for the tool result (provided by the platform) and then include a short confirmation section.\n\nOutput Discipline:\n- Use proper tagging: [#session:{{SESSION_ID}}] [#agent:publisher] [#step:4]\n- Present final report in clear markdown format\n- Include next check-in suggestion\n- Confirm any export actions taken",
        "userTemplate": "Inputs:\n- Summary: {{summary}}\n- Action Table (markdown): {{action_table}}\n- Tool Result (optional): {{notion_create_tasks_result}}\n\nProduce:\n1. [#step:4] Final Report with: Summary, Action Items, Next Check‑In (suggest a date), and (if any) Export Confirmation.\n\nExpected Output Format:\n[#session:{{SESSION_ID}}] [#agent:publisher] [#step:4]\n\n## Meeting → Action Report\n\n### Summary\n\n{{summary}}\n\n### Action Items\n\n{{action_table}}\n\n### Next Check‑In\n\nProposed: {{NEXT_CHECKIN_DATE}} (auto‑suggest: 7 days from today)\n\n### Export Confirmation\n\n* Notion page created: {{NOTION_PAGE_URL}} (if available)\n* Jira issues created: {{JIRA_KEYS}} (if available)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "summary": { "type": "string" },
            "action_table": { "type": "string" },
            "tool_result": { "type": "object" }
          }
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "final_report": { "type": "string" },
            "next_checkin": { "type": "string" },
            "export_confirmation": { "type": "object" }
          }
        }
      }
    ],
    "tools": [
      {
        "name": "notion.create_tasks",
        "description": "Create task rows in Notion database",
        "type": "builtin",
        "spec": {
          "inputSchema": {
            "type": "object",
            "properties": {
              "database_id": {
                "type": "string",
                "description": "Notion database ID where tasks will be created"
              },
              "tasks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": { "type": "string" },
                    "owner": { "type": "string" },
                    "due": { "type": "string", "format": "date" },
                    "priority": { "type": "string", "enum": ["Low", "Medium", "High"] },
                    "notes": { "type": "string" }
                  },
                  "required": ["title"]
                }
              }
            },
            "required": ["database_id", "tasks"]
          },
          "outputSchema": {
            "type": "object",
            "properties": {
              "success": { "type": "boolean" },
              "created_pages": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "url": { "type": "string" },
                    "title": { "type": "string" }
                  }
                }
              },
              "database_url": { "type": "string" }
            }
          }
        }
      }
    ],
    "steps": [
      {
        "idx": 1,
        "kind": "agent",
        "name": "transcriber",
        "description": "Clean and prepare transcript",
        "config": {
          "inputs": ["source_type", "transcript", "audio_url"],
          "outputs": ["clean_transcript"]
        }
      },
      {
        "idx": 2,
        "kind": "agent", 
        "name": "summariser",
        "description": "Generate meeting summary and key decisions",
        "config": {
          "inputs": ["clean_transcript"],
          "outputs": ["summary", "key_decisions", "open_questions"]
        }
      },
      {
        "idx": 3,
        "kind": "agent",
        "name": "action_extractor", 
        "description": "Extract actionable tasks and prepare export",
        "config": {
          "inputs": ["clean_transcript", "summary", "attendees", "export_target"],
          "outputs": ["action_table", "action_items", "tool_call"]
        }
      },
      {
        "idx": 4,
        "kind": "tool",
        "name": "notion.create_tasks",
        "description": "Export tasks to Notion (conditional on export_target)",
        "config": {
          "condition": "export_target === 'notion'",
          "inputs": ["action_items", "database_id"],
          "outputs": ["notion_create_tasks_result"]
        }
      },
      {
        "idx": 5,
        "kind": "agent",
        "name": "publisher",
        "description": "Generate final report with export confirmation",
        "config": {
          "inputs": ["summary", "action_table", "notion_create_tasks_result"],
          "outputs": ["final_report", "next_checkin", "export_confirmation"]
        }
      }
    ],
    "secrets": [
      {
        "key": "NOTION_API_KEY",
        "description": "Notion integration API key"
      },
      {
        "key": "NOTION_DB_ID", 
        "description": "Default Notion database ID for task creation"
      }
    ],
    "testData": {
      "inputs": {
        "transcript": "We agreed Bob will prepare 3 wireframes by next Wednesday; Alice to draft PRD by Friday; Carol to set up API mock server by Thursday.",
        "attendees": ["Alice (PM)", "Bob (Design)", "Carol (Eng)"],
        "source_type": "uploaded_text",
        "export_target": "notion"
      },
      "expectedOutputs": {
        "summary": "Team aligned on next steps for product development",
        "action_items": [
          {"owner": "Bob", "task": "Prepare 3 wireframes", "due_by": "2025-09-18", "priority": "Medium"},
          {"owner": "Alice", "task": "Draft PRD", "due_by": "2025-09-19", "priority": "High"},
          {"owner": "Carol", "task": "Set up API mock server", "due_by": "2025-09-17", "priority": "Medium"}
        ]
      }
    }
  }
}